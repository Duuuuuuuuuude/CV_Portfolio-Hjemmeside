# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

# resources:
# - repo: self

variables:
  tag: 'build-$(Build.BuildId)sha256-$(Build.SourceVersion)'
  containerRegistryServiceConnection: 'azure_pipeline/DigitalOcean-ContainerRegistry/koldste.dev'
  imageRepository: 'koldste-dev-digitalocean-container-registry/azurepipeline/koldste.dev'
  
  # release pipeline variables
  imagePullSecret: azure-secret-registry-koldste-dev-digitalocean-container-registry
  k8sNamespace: backend
  # imageRepository: 'koldste-dev-digitalocean-container-registry/AzurePipeline/koldste.dev'
  # tag: 'v$(Build.BuildId)@sha1:$(Build.SourceVersion)'
  containerRegistryURL: 'registry.digitalocean.com'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build and publish artifact
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: 'Build and push an image to container registry'
      inputs:
        containerRegistry: '$(containerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        buildContext: '.'
        tags: '$(tag)'
        
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'Manifests'
        path: 'Koldste.dev.Web/Manifests'



# Release pipeline
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      vmImage: ubuntu-latest
    environment: koldstedev-do-kubernetes
    strategy:
      runOnce:
        deploy:
          steps:

          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'Manifests'
              downloadPath: '$(System.ArtifactsDirectory)/Manifests'

          - task: KubernetesManifest@1
            displayName: Create imagePullSecret
            inputs:
              action: 'createSecret'
              connectionType: 'kubernetesServiceConnection'
              kubernetesServiceConnection: 'koldstedev-do-kubernetes-backend-1711399786755'
              namespace: '$(k8sNamespace)'
              secretType: 'dockerRegistry'
              secretName: '$(imagePullSecret)'
              dockerRegistryEndpoint: 'azure_pipeline/DigitalOcean-ContainerRegistry/koldste.dev'

          - script: |
              sed -i "s|{{DOCKER_IMAGE_NAME}}|$(containerRegistryURL)/$(imageRepository)|g" $(System.ArtifactsDirectory)/Manifests/website-koldstedev/Deployment_koldstedev.yaml
              sed -i "s|{{DOCKER_IMAGE_TAG}}|$(tag)|" $(System.ArtifactsDirectory)/Manifests/website-koldstedev/Deployment_koldstedev.yaml
            displayName: 'Replace Docker image name and tag in deployment manifest file'

          - task: KubernetesManifest@1
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              connectionType: 'kubernetesServiceConnection'
              kubernetesServiceConnection: 'koldstedev-do-kubernetes-backend-1711399786755'
              namespace: '$(k8sNamespace)'
              manifests: $(System.ArtifactsDirectory)/Manifests
              imagePullSecrets: '$(imagePullSecret)'
              rolloutStatusTimeout: '180'